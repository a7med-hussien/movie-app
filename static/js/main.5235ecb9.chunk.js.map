{"version":3,"sources":["components/Navbar/Navbar.js","components/HeroImage/HeroImage.js","components/Search/Search.js","components/SingleMovie/SingleMovie.js","components/LoadMore/LoadMore.js","components/Movies/Movies.js","components/Loader/Loader.js","components/Home/Home.js","components/MovieMasterInfo/MovieMasterInfo.js","components/SingleActor/SingleActor.js","components/Actors/Actors.js","components/MovieInfo/MovieInfo.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","src","alt","HeroImage","props","hero","style","background","backdrop_path","title","overview","Search","aria-hidden","type","placeholder","SingleMovie","movie","id","poster_path","LoadMore","Movies","movies","map","index","key","length","Loader","Home","state","currentPage","heroImage","getPopularMovies","fetch","then","response","json","setState","results","page","this","Component","formatter","Intl","NumberFormat","currency","minimumFractionDigits","MovieMasterInfo","info","min","max","optimum","low","high","value","vote_average","num","runtime","Math","floor","format","budget","revenue","SingleActor","image","profile_path","name","character","Actors","actors","actor","MovieInfo","movieInfo","getMovieInfo","movieId","match","params","getMovieActors","cast","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5235ecb9.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport './Navbar.css';\n\nfunction Navbar() {\n    return (\n        <div className=\"rmdb-header\">\n            <div className=\"rmdb-header-content\">\n                <Link to=\"/\">\n                    <img className=\"rmdb-logo\" src=\"https://i.imgur.com/0GdlwCQ.png\" alt=\"rmdb-logo\" />\n                </Link>\n                <img className=\"rmdb-tmdb-logo\" src=\"https://i.imgur.com/lYZGBVp.png\" alt=\"tmdb-logo\"/>\n            </div>\n        </div>\n    );\n}\n\nexport default Navbar;","import React from \"react\";\n\nimport './HeroImage.css';\n\nfunction HeroImage(props) {\n    return (\n\n        props.hero\n        ?\n        <div className=\"rmdb-heroimage\" style={{\n                background: `linear-gradient(rgba(0, 0, 0, 0) 39%, rgba(0, 0, 0, 0) 41%, rgba(0, 0, 0, 0.65) 100%), url('http://image.tmdb.org/t/p/w1280/${props.hero.backdrop_path}'), rgb(28, 28, 28)`\n            }}>\n            <div className=\"rmdb-heroimage-content\">\n                <div className=\"rmdb-heroimage-text\">\n                    <h1>{props.hero.title}</h1>\n                    <p>{props.hero.overview}</p>\n                </div>\n            </div>\n        </div>\n        :\n        null\n    )\n}\n\n\nexport default HeroImage;","import React from \"react\";\n\nimport \"./Search.css\";\n\nfunction Search() {\n    return (\n        <div className=\"rmdb-searchbar\">\n            <div className=\"rmdb-searchbar-content\">\n                <span aria-hidden=\"true\" className=\"fa fa-search fa-2x rmdb-fa-search\"></span>\n                <input type=\"text\" className=\"rmdb-searchbar-input\" placeholder=\"Search\" />\n            </div>\n        </div>\n    );\n}\n\nexport default Search;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport \"./SingleMovie.css\";\n\nfunction SingleMovie(props) {\n    return (\n        <div className=\"rmdb-grid-element\">\n            <div className=\"rmdb-moviethumb\">\n                <Link to={`/${props.movie.id}`}>\n                    <img src={`http://image.tmdb.org/t/p/w500/${props.movie.poster_path}`}\n                            alt=\"moviethumb\"/>\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nexport default SingleMovie;","import React from \"react\";\n\nimport \"./LoadMore.css\";\n\nfunction LoadMore() {\n    return (\n        <div className=\"rmdb-loadmorebtn\">\n            <p>Load More</p>\n        </div>\n    );\n}\n\nexport default LoadMore;","import React from \"react\";\n\nimport \"./Movies.css\";\n\nimport SingleMovie from \"./../SingleMovie/SingleMovie\";\nimport LoadMore from \"./../LoadMore/LoadMore\";\n\nfunction Movies(props) {\n\n    let movies = props.movies.map((movie, index) => {\n        return <SingleMovie key={index} movie={movie} />\n    });\n\n    return (\n        <div className=\"rmdb-home-grid\">\n            <div className=\"rmdb-grid\">\n                <h1>Popular Movies</h1>\n                <div className=\"rmdb-grid-content\">\n                    { movies.length > 0 ? movies : '' }\n                </div>\n            </div>\n\n            <LoadMore />\n        </div>\n    );\n}\n\nexport default Movies;","import React from 'react';\n\nimport \"./Loader.css\";\n\nfunction Loader() {\n    return (\n        <div className=\"loader\"></div>\n    );\n}\n\nexport default Loader;","import React, { Component } from \"react\";\n// import axios from 'axios';\n// import { APIKEY, APILINK } from './../../config';\n\nimport HeroImage from './../HeroImage/HeroImage';\nimport Search from './../Search/Search';\nimport Movies from './../Movies/Movies';\nimport Loader from './../Loader/Loader';\n\nimport \"./Home.css\";\n\nclass Home extends Component {\n\n    state = {\n        movies: null,\n        currentPage: 1,\n        heroImage: null\n    };\n\n    getPopularMovies = () => {\n        fetch('https://api.themoviedb.org/3/movie/popular?api_key=bf625fc6cd2fdd129acfcec39e2c3fa0&language=en-US&page=1')\n            .then(response => response.json())\n            .then(response => {\n                this.setState({\n                    movies: response.results,\n                    currentPage: response.page,\n                    heroImage: response.results[0]\n                });\n            });\n\n            // axios.get('https://api.themoviedb.org/3/movie/popular?api_key=bf625fc6cd2fdd129acfcec39e2c3fa0&language=en-US&page=1')\n        //     .then(response => {\n        //         this.setState({\n        //             movies: response.data.results,\n        //             currentPage: response.data.page,\n        //             heroImage: response.data.results[0]\n        //         })\n        //     });\n    }\n\n    componentDidMount() {\n        this.getPopularMovies();\n    }\n\n    render() {\n        return (\n            <div className=\"rmdb-home\">\n                <HeroImage hero={this.state.heroImage} />\n\n                <Search />\n\n                { !this.state.movies ? <Loader /> : <Movies movies={this.state.movies} /> }\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./MovieMasterInfo.css\";\nimport Loader from \"../Loader/Loader\";\n\nconst formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2\n});\n\nfunction timeConvert(num) {\n    var hours = Math.floor(num / 60);\n    var minutes = num % 60;\n    return hours + \"h \" + minutes + \"m\";\n}\n\nfunction MovieMasterInfo(props) {\n    return (\n        props.info\n        ?\n            <div>\n                <div className=\"rmdb-navigation\">\n                    <div className=\"rmdb-navigation-content\">\n                        <Link to=\"/\">\n                            <p>Home</p>\n                        </Link>\n                        <p>/</p>\n                        <p>{props.info.title}</p>\n                    </div>\n                </div>\n                <div className=\"rmdb-movieinfo\"\n                    style={{\n                        background: `url(http://image.tmdb.org/t/p/w1280/${props.info.backdrop_path})`}}>\n                    <div className=\"rmdb-movieinfo-content\">\n                        <div className=\"rmdb-movieinfo-thumb\">\n                            <div className=\"rmdb-moviethumb\">\n                                <img\n                                    src={`http://image.tmdb.org/t/p/w500/${props.info.poster_path}`}\n                                    alt=\"moviethumb\"/>\n                            </div>\n                        </div>\n                        <div className=\"rmdb-movieinfo-text\">\n                            <h1>{props.info.title}</h1>\n                            <h3>PLOT</h3>\n                            <p>{props.info.overview}</p>\n                            <h3>IMDB RATING</h3>\n                            <div className=\"rmdb-rating\">\n                                <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={props.info.vote_average * 10}></meter>\n                                <p className=\"rmdb-score\">{props.info.vote_average}</p>\n                            </div>\n                            <h3>DIRECTOR</h3>\n                            <p className=\"rmdb-director\">David Lowery</p>\n                        </div>\n                        <span aria-hidden=\"true\" className=\"fa fa-film fa-5x fa-film\"></span>\n                    </div>\n                </div>\n                <div className=\"rmdb-movieinfobar\">\n                    <div className=\"rmdb-movieinfobar-content\">\n                        <div className=\"rmdb-movieinfobar-content-col\">\n                            <span aria-hidden=\"true\" className=\"fa fa-clock-o fa-2x fa-time\"></span>\n                            <span className=\"rmdb-movieinfobar-info\">Running time: {timeConvert(props.info.runtime)}</span>\n                        </div>\n                        <div className=\"rmdb-movieinfobar-content-col\">\n                            <span aria-hidden=\"true\" className=\"fa fa-money fa-2x fa-budget\"></span>\n                            <span className=\"rmdb-movieinfobar-info\">Budget: {formatter.format(props.info.budget)}</span>\n                        </div>\n                        <div className=\"rmdb-movieinfobar-content-col\">\n                            <span aria-hidden=\"true\" className=\"fa fa-ticket fa-2x fa-revenue\"></span>\n                            <span className=\"rmdb-movieinfobar-info\">Revenue: {formatter.format(props.info.revenue)}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        :\n        <Loader />\n    )\n}\n\nexport default MovieMasterInfo;","import React from \"react\";\n\nimport \"./SingleActor.css\";\n\nfunction SingleActor(props) {\n\n    let image = props.info.profile_path ? <img\n                    src={`http://image.tmdb.org/t/p/w154/${props.info.profile_path}`}\n                    alt=\"actorthumb\"/>\n                : <img src=\"https://image.shutterstock.com/image-vector/no-image-available-sign-internet-600w-261719003.jpg\" alt=\"noImage\" />;\n    return (\n        <div className=\"rmdb-grid-element\">\n            <div className=\"rmdb-actor\">\n                {image}\n                <span className=\"rmdb-actor-name\">{props.info.name}</span>\n                <span className=\"rmdb-actor-character\">{props.info.character}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default SingleActor;","import React from \"react\";\n\nimport SingleActor from \"./../SingleActor/SingleActor\";\n\nfunction Actors(props) {\n\n    let actors = props.actors ? props.actors.map((actor, index) => {\n        return <SingleActor info={actor} key={index} />\n    }) : null;\n\n\n    return (\n        <div className=\"rmdb-movie-grid\">\n                <div className=\"rmdb-grid\">\n                    <h1>Actors</h1>\n                    <div className=\"rmdb-grid-content\">\n                        {actors}\n                    </div>\n                </div>\n            </div>\n    );\n}\n\nexport default Actors;","import React, { Component } from \"react\";\n\n// import axios from \"axios\";\n// import { APIKEY, APILINK } from \"./../../config\";\n\nimport MovieMasterInfo from \"./../MovieMasterInfo/MovieMasterInfo\";\nimport Actors from \"./../Actors/Actors\";\n\nimport \"./MovieInfo.css\";\n\nclass MovieInfo extends Component {\n\n    state = {\n        movieInfo: null,\n        actors: null\n    }\n\n    getMovieInfo = () => {\n        const movieId = this.props.match.params.movieId;\n        fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=bf625fc6cd2fdd129acfcec39e2c3fa0&language=en-US`)\n            .then(response => response.json())\n            .then(response => {\n                this.setState({\n                    movieInfo: response\n                });\n            });\n\n        // axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=bf625fc6cd2fdd129acfcec39e2c3fa0&language=en-US`)\n        //     .then(response => {\n        //         this.setState({\n        //             movieInfo: response.data\n        //         });\n        //     });\n    }\n\n\n    getMovieActors = () => {\n        const movieId = this.props.match.params.movieId;\n\n        fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=bf625fc6cd2fdd129acfcec39e2c3fa0`)\n            .then(response => response.json())\n            .then(response => {\n                this.setState({\n                    actors: response.cast\n                });\n            });\n\n        // axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=bf625fc6cd2fdd129acfcec39e2c3fa0`)\n        //     .then(response => {\n        //         this.setState({\n        //             actors: response.data.cast\n        //         });\n        //     });\n    }\n\n    componentDidMount() {\n        this.getMovieInfo();\n\n        this.getMovieActors();\n    }\n\n    render() {\n        return (\n            <div className=\"rmdb-movie\">\n                <MovieMasterInfo info={this.state.movieInfo} />\n\n                <Actors actors={this.state.actors} />\n            </div>\n        );\n    }\n}\n\nexport default MovieInfo;","import React from 'react';\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Home from \"./components/Home/Home\";\nimport MovieInfo from \"./components/MovieInfo/MovieInfo\";\n\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<div>\n\t\t\t<BrowserRouter>\n\n\t\t\t\t<Navbar />\n\n\t\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t\t<Route path=\"/:movieId\" component={MovieInfo} />\n\t\t\t</BrowserRouter>\n\n\t\t\t{/* <Home /> */}\n\t\t\t{/* <MovieInfo /> */}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}